{"version":3,"sources":["views/Master/Doctors/DoctorEdit/DoctorEdit.js","components/Common/FooterButtons.js","components/Common/InputField.js","components/Doctor/DoctorForm.js"],"names":["sleep","ms","Promise","resolve","setTimeout","initialState","DoctorEdit","props","dispatch","useDispatch","_useState","useState","_useState2","Object","E_MyProjects_school_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","state","setState","doctorList","useSelector","globalState","doctors","data","id","match","params","useEffect","_doctorList$filter","filter","x","Number","selectedDoctor","onFormSubmit","_ref","E_MyProjects_school_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","E_MyProjects_school_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","values","wrap","_context","prev","next","console","log","update","E_MyProjects_school_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","name","firstName","lastName","history","push","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","className","react_final_form__WEBPACK_IMPORTED_MODULE_5__","initialValues","onSubmit","mutators","render","_ref2","handleSubmit","submitting","submitError","dirtySinceLastSubmit","form","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","xs","sm","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","_components_Doctor_DoctorForm__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","_components_Common_FooterButtons__WEBPACK_IMPORTED_MODULE_16__","backUrl","JSON","stringify","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","FooterButtons","Fragment","type","size","color","disabled","role","aria-hidden","to","defaultProps","InputField","E_MyProjects_school_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_final_form__WEBPACK_IMPORTED_MODULE_2__","input","meta","reactstrap__WEBPACK_IMPORTED_MODULE_3__","assign","react_final_form__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","_Common_InputField__WEBPACK_IMPORTED_MODULE_5__","DoctorForm","row","htmlFor","value"],"mappings":"mTAgBaA,EAAQ,SAACC,GAAD,OAAQ,IAAIC,QAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAEpEI,EAAe,GAkENC,UAjEI,SAACC,GAClB,IAAMC,EAAWC,cADWC,EAEFC,mBAASN,GAFPO,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAErBK,EAFqBH,EAAA,GAEdI,EAFcJ,EAAA,GAGtBK,EAAaC,YAAY,SAACC,GAAD,OAAiBA,EAAYC,QAAQC,OAE5DC,EAAOf,EAAMgB,MAAMC,OAAnBF,GAERG,oBAAU,WAAM,IAAAC,EACWT,EAAWU,OAAO,SAACC,GAAD,OAAOA,EAAEN,KAAOO,OAAOP,KAA3DQ,EADOjB,OAAAC,EAAA,EAAAD,CAAAa,EAAA,MAEdV,EAASc,IACR,CAACb,EAAYK,IAEhB,IAAMS,EAAY,eAAAC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBC,QAAQC,IAAIN,GADOE,EAAAE,KAAA,EAEb1C,EAAM,KAFO,OAGnBQ,EACEqC,YAAOvB,EAADT,OAAAiC,EAAA,EAAAjC,CAAA,GAAUyB,EAAV,CAAkBS,KAAMT,EAAOU,UAAY,IAAMV,EAAOW,aAEhE1C,EAAM2C,QAAQC,KAAK,kBANA,wBAAAX,EAAAY,SAAAf,MAAH,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAC,KAAAC,YAAA,GASlB,OACEC,EAAAtB,EAAAuB,cAAA,OAAKC,UAAU,mBACbF,EAAAtB,EAAAuB,cAACE,EAAA,EAAD,CACEC,cAAe9C,EACf+C,SAAU/B,EACVgC,SAAU,GACVC,OAAQ,SAAAC,GAAA,IACNC,EADMD,EACNC,aACAC,EAFMF,EAENE,WAGA7B,GALM2B,EAGNG,YAHMH,EAINI,qBAJMJ,EAKN3B,QALM,OAAA2B,EAMNK,KAEAb,EAAAtB,EAAAuB,cAAA,QAAMI,SAAUI,GACdT,EAAAtB,EAAAuB,cAACa,EAAA,EAAD,KACEd,EAAAtB,EAAAuB,cAACc,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,MACdjB,EAAAtB,EAAAuB,cAACiB,EAAA,EAAD,KACElB,EAAAtB,EAAAuB,cAACkB,EAAA,EAAD,KACEnB,EAAAtB,EAAAuB,cAACmB,EAAA,EAAD,KACEpB,EAAAtB,EAAAuB,cAACa,EAAA,EAAD,KACEd,EAAAtB,EAAAuB,cAACc,EAAA,EAAD,CAAKC,GAAG,KAAKK,GAAG,KACdrB,EAAAtB,EAAAuB,cAAA,4BAKRD,EAAAtB,EAAAuB,cAACqB,EAAA,EAAD,KACEtB,EAAAtB,EAAAuB,cAACsB,EAAA,EAAD,OAEFvB,EAAAtB,EAAAuB,cAACuB,EAAA,EAAD,KACExB,EAAAtB,EAAAuB,cAACwB,EAAA,EAAD,CAAeC,QAAQ,UAAUhB,WAAYA,QAKrDV,EAAAtB,EAAAuB,cAAA,WAAM0B,KAAKC,UAAU/C,EAAQ,KAAM,4CC5E/C,IAAAgD,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAMMK,EAAgB,SAAA5D,GAA6B,IAA1BmD,EAA0BnD,EAA1BmD,QAAShB,EAAiBnC,EAAjBmC,WAChC,OACEqB,EAAArD,EAAAuB,cAAA8B,EAAArD,EAAA0D,SAAA,KACEL,EAAArD,EAAAuB,cAACgC,EAAA,EAAD,CACEI,KAAK,SACLC,KAAK,KACLC,MAAM,UACNrC,UAAU,aACVsC,SAAU9B,GAETA,GACCqB,EAAArD,EAAAuB,cAAA,QACEC,UAAU,mCACVuC,KAAK,SACLC,cAAY,SAEb,IACHX,EAAArD,EAAAuB,cAAA,KAAGC,UAAU,uBAdf,QAkBA6B,EAAArD,EAAAuB,cAACiC,EAAA,KAAD,CAAMS,GAAIjB,EAASxB,UAAU,kBAAkBoC,KAAK,MAClDP,EAAArD,EAAAuB,cAACgC,EAAA,EAAD,CAAQI,KAAK,SAASC,KAAK,KAAKC,MAAM,SAASrC,UAAU,cACvD6B,EAAArD,EAAAuB,cAAA,KAAGC,UAAU,uBADf,YAaRiC,EAAcS,aAAe,GAEdT,uFCrCTU,EAAa,SAAAtE,GAAwB,IAArBe,EAAqBf,EAArBe,KAASxC,EAAYM,OAAA0F,EAAA,EAAA1F,CAAAmB,EAAA,UACzC,OACEwE,EAAArE,EAAAuB,cAAC+C,EAAA,EAAD,CAAO1D,KAAMA,GACV,SAAAkB,GAAA,IAAGyC,EAAHzC,EAAGyC,MAAHzC,EAAU0C,KAAV,OACCH,EAAArE,EAAAuB,cAAA8C,EAAArE,EAAA0D,SAAA,KACEW,EAAArE,EAAAuB,cAACkD,EAAA,EAAD/F,OAAAgG,OAAA,CAAOf,KAAK,QAAWY,EAAWnG,QAW5C+F,EAAWD,aAAe,GAEXC,wCCxBf,IAAAhB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAwB,EAAAvB,EAAA,KAAAwB,EAAAxB,EAAA,MAAAqB,EAAArB,EAAA,KAAAyB,EAAAzB,EAAA,MAAA0B,EAAA1B,EAAA,KA+Ee2B,IA1EI,WACjB,OACE1B,EAAArD,EAAAuB,cAAA8B,EAAArD,EAAA0D,SAAA,KACEL,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,CAAWI,KAAG,EAACxD,UAAU,QACvB6B,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,aAAf,cACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,gBAGrByC,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,YAAf,aACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,gBAKvByC,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,CAAWI,KAAG,EAACxD,UAAU,QACvB6B,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,OAAf,iBACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,MAAM+C,KAAK,WAGhCN,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,UAAf,UACA5B,EAAArD,EAAAuB,cAACoD,EAAA,EAAD,CAAO/D,KAAK,UACT,SAAAf,GAAA,IAAG0E,EAAH1E,EAAG0E,MAAH,OAAA1E,EAAU2E,KACTnB,EAAArD,EAAAuB,cAAA8B,EAAArD,EAAA0D,SAAA,KACEL,EAAArD,EAAAuB,cAAA,SAAA7C,OAAAgG,OAAA,CAAQlD,UAAU,gBAAmB+C,GACnClB,EAAArD,EAAAuB,cAAA,UAAQ2D,MAAM,KAAd,YACA7B,EAAArD,EAAAuB,cAAA,UAAQ2D,MAAM,KAAd,QACA7B,EAAArD,EAAAuB,cAAA,UAAQ2D,MAAM,KAAd,gBAOZ7B,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,cAAf,cACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,iBAGrByC,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,aAAf,cACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,iBAKvByC,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,CAAWI,KAAG,GACZ3B,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,SAAf,SACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,QAAQ+C,KAAK,YAIlCN,EAAArD,EAAAuB,cAACkD,EAAA,EAAD,CAAKnC,GAAG,KAAKK,GAAG,KACdU,EAAArD,EAAAuB,cAACqD,EAAA,EAAD,KACEvB,EAAArD,EAAAuB,cAACsD,EAAA,EAAD,CAAOI,QAAQ,WAAf,WACA5B,EAAArD,EAAAuB,cAACuD,EAAA,EAAD,CAAYlE,KAAK,UAAU+C,KAAK","file":"static/js/54.a499cf90.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-final-form\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  FormGroup,\n  CardFooter,\n} from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DoctorForm from \"../../../../components/Doctor/DoctorForm\";\nimport { update } from \"../../../../redux/modules/doctor\";\nimport FooterButtons from \"../../../../components/Common/FooterButtons\";\n\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst initialState = {};\nconst DoctorEdit = (props) => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState(initialState);\n  const doctorList = useSelector((globalState) => globalState.doctors.data);\n\n  const { id } = props.match.params;\n\n  useEffect(() => {\n    const [selectedDoctor] = doctorList.filter((x) => x.id === Number(id));\n    setState(selectedDoctor);\n  }, [doctorList, id]);\n\n  const onFormSubmit = async (values) => {\n    console.log(values);\n    await sleep(300);\n    dispatch(\n      update(id, { ...values, name: values.firstName + \" \" + values.lastName })\n    );\n    props.history.push(\"/master/doctor\");\n  };\n\n  return (\n    <div className=\"animated fadeIn\">\n      <Form\n        initialValues={state}\n        onSubmit={onFormSubmit}\n        mutators={{}}\n        render={({\n          handleSubmit,\n          submitting,\n          submitError,\n          dirtySinceLastSubmit,\n          values,\n          form,\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <Row>\n              <Col xs=\"12\" sm=\"12\">\n                <Card>\n                  <CardHeader>\n                    <FormGroup>\n                      <Row>\n                        <Col xs=\"12\" md=\"6\">\n                          <strong>Doctor</strong>\n                        </Col>\n                      </Row>\n                    </FormGroup>\n                  </CardHeader>\n                  <CardBody>\n                    <DoctorForm />\n                  </CardBody>\n                  <CardFooter>\n                    <FooterButtons backUrl=\"/doctor\" submitting={submitting} />\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </form>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default DoctorEdit;\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FooterButtons = ({ backUrl, submitting }) => {\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"submit\"\r\n        size=\"sm\"\r\n        color=\"primary\"\r\n        className=\"pull-right\"\r\n        disabled={submitting}\r\n      >\r\n        {submitting && (\r\n          <span\r\n            className=\"spinner-border spinner-border-sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n        )}{\" \"}\r\n        <i className=\"fa fa-dot-circle-o\" />\r\n        Save\r\n      </Button>\r\n\r\n      <Link to={backUrl} className=\"pull-right mr-1\" size=\"sm\">\r\n        <Button type=\"submit\" size=\"sm\" color=\"danger\" className=\"pull-right\">\r\n          <i className=\"fa fa-dot-circle-o\"></i> Back\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nFooterButtons.propTypes = {\r\n  backUrl: PropTypes.string.isRequired,\r\n  submitting: PropTypes.bool.isRequired,\r\n};\r\n\r\nFooterButtons.defaultProps = {};\r\n\r\nexport default FooterButtons;\r\n","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputField = ({ name, ...props }) => {\r\n  return (\r\n    <Field name={name}>\r\n      {({ input, meta }) => (\r\n        <>\r\n          <Input type=\"text\" {...input} {...props} />\r\n        </>\r\n      )}\r\n    </Field>\r\n  );\r\n};\r\n\r\nInputField.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nInputField.defaultProps = {};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { Col, FormGroup, Label } from \"reactstrap\";\r\nimport InputField from \"../Common/InputField\";\r\n\r\nconst DoctorForm = () => {\r\n  return (\r\n    <>\r\n      <FormGroup row className=\"my-0\">\r\n        <Col xs=\"12\" md=\"6\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"firstName\">First Name</Label>\r\n            <InputField name=\"firstName\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col xs=\"12\" md=\"6\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"lastName\">Last Name</Label>\r\n            <InputField name=\"lastName\" />\r\n          </FormGroup>\r\n        </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row className=\"my-0\">\r\n        <Col xs=\"12\" md=\"3\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"dob\">Date Of Birth</Label>\r\n            <InputField name=\"dob\" type=\"date\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col xs=\"12\" md=\"3\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"gender\">Gender</Label>\r\n            <Field name=\"gender\">\r\n              {({ input, meta }) => (\r\n                <>\r\n                  <select className=\"form-control\" {...input}>\r\n                    <option value=\"0\">-Gender-</option>\r\n                    <option value=\"m\">Male</option>\r\n                    <option value=\"f\">Female</option>\r\n                  </select>\r\n                </>\r\n              )}\r\n            </Field>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col xs=\"12\" md=\"3\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"speciality\">Speciality</Label>\r\n            <InputField name=\"speciality\" />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col xs=\"12\" md=\"3\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"contactno\">Contact No</Label>\r\n            <InputField name=\"contactno\" />\r\n          </FormGroup>\r\n        </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row>\r\n        <Col xs=\"12\" md=\"6\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <InputField name=\"email\" type=\"email\" />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col xs=\"12\" md=\"6\">\r\n          <FormGroup>\r\n            <Label htmlFor=\"address\">Address</Label>\r\n            <InputField name=\"address\" type=\"textarea\" />\r\n          </FormGroup>\r\n        </Col>\r\n      </FormGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorForm;\r\n"],"sourceRoot":""}